name: Base Deployment

# This is a reusable workflow for deploying containers
# It should be called from other workflow files

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      container_name:
        required: true
        type: string
      dockerfile_path:
        required: true
        type: string
      build_context:
        required: true
        type: string
      build_args:
        required: false
        type: string
        default: ''
      secrets:
        required: false
        type: string
        default: '[]'
    secrets:
      DOCKERHUB_TOKEN:
        required: true
      DOCKERHUB_USERNAME:
        required: true

jobs:
  deploy-container:
    name: Deploy ${{ inputs.container_name }} to ${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: opendiscourse/${{ inputs.container_name }}
        tags: |
          type=sha,format=long
          type=ref,event=branch
          type=ref,event=pr
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ${{ inputs.build_context }}
        file: ${{ inputs.dockerfile_path }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: ${{ inputs.build_args }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Verify deployment
      run: |
        # Add health check for the deployed service
        echo "Verifying deployment of ${{ inputs.container_name }}..."
        # Add actual health check commands here
        
    - name: Notify on failure
      if: failure()
      uses: rtCamp/action-slack-notify@v2.2.0
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_TITLE: "Deployment Failed: ${{ inputs.container_name }} to ${{ inputs.environment }}"
        SLACK_MESSAGE: "Deployment of ${{ inputs.container_name }} to ${{ inputs.environment }} failed. Check the logs for details."
        SLACK_COLOR: "danger"
